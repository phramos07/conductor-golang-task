{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "OpenAPI doc for the Conductor coding challenge.",
    "title": "Conductor coding challenge API.",
    "contact": {
      "name": "Supun Muthutantri",
      "email": "fakemail@gmail.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/accounts": {
      "get": {
        "description": "Retrieves all accounts stored in the database.",
        "tags": [
          "accounts"
        ],
        "summary": "Retrieves all accounts.",
        "operationId": "getAccounts",
        "responses": {
          "200": {
            "$ref": "#/responses/accountsResponse"
          },
          "204": {
            "description": "No accounts found.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "Creates new account in the database.",
        "tags": [
          "accounts"
        ],
        "summary": "Creates new account.",
        "operationId": "postAccount",
        "parameters": [
          {
            "x-go-name": "Account",
            "name": "account",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "status"
              ],
              "properties": {
                "status": {
                  "type": "string",
                  "x-go-name": "Status"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/accountCreatedResponse"
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "If the API is online, an OK will be returned.",
        "tags": [
          "health"
        ],
        "summary": "Health check. Return API health status.",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Health check report. API is (apparently) OK.",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Health check report. Something is wrong.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "account": {
      "type": "object",
      "title": "Account model.",
      "required": [
        "id",
        "status",
        "created_at",
        "updated_at",
        "deleted_at"
      ],
      "properties": {
        "created_at": {
          "description": "Time the Account was created",
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "deleted_at": {
          "description": "Time the Account was deleted",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DeletedAt"
        },
        "id": {
          "description": "The ID of the Account",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "status": {
          "description": "Status of the order.",
          "type": "string",
          "x-go-name": "Status"
        },
        "updated_at": {
          "description": "Time the Account was updated",
          "type": "string",
          "format": "date-time",
          "x-go-name": "UpdatedAt"
        }
      },
      "x-go-name": "Account",
      "x-go-package": "conductor/internal/model"
    }
  },
  "responses": {
    "accountCreatedResponse": {
      "description": "The AccountCreatedResponse contains the ID of the created account.",
      "schema": {
        "type": "object",
        "required": [
          "ID"
        ],
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "accountsResponse": {
      "description": "An AccountsResponse response model\n\nThis is used for returning a response with multiple accounts as body",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/account"
        }
      }
    }
  },
  "securityDefinitions": {
    "APIKey": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "APIKey": []
    }
  ]
}